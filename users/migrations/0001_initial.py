# Generated by Django 3.1.7 on 2021-07-30 07:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import gdstorage.storage
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('static_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('contact_no', models.BigIntegerField(blank=True, null=True, unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1111111111)])),
                ('member_type', models.CharField(choices=[('Individual', 'Individual'), ('Restaurant', 'Restaurant'), ('NGO', 'NGO')], max_length=20)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_pic', models.ImageField(blank=True, storage=gdstorage.storage.GoogleDriveStorage, upload_to=users.models.profile_pic_directory_path)),
                ('reg_token', models.CharField(blank=True, max_length=260)),
                ('auth_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='member', to=settings.AUTH_USER_MODEL)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.city')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('website', models.URLField(blank=True, null=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant', to='users.member')),
            ],
        ),
        migrations.CreateModel(
            name='NGO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('reg_number', models.CharField(max_length=20)),
                ('id_proof', models.ImageField(blank=True, storage=gdstorage.storage.GoogleDriveStorage, upload_to=users.models.proof_directory_path)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ngo', to='users.member')),
            ],
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('reward_points', models.PositiveIntegerField(default=0)),
                ('is_volunteer', models.BooleanField(default=False)),
                ('id_number', models.CharField(blank=True, max_length=50, null=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='individual', to='users.member')),
                ('ngo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.ngo')),
            ],
        ),
    ]
